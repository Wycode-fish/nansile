#version 330 core

layout (location=0) in vec3 u_VPos;
layout (location=1) in vec2 u_Tcs;
layout (location=2) in vec3 u_Normal;

out vec2 v_Tcs;
out vec3 v_VPos;
out vec3 v_Normal;
out vec3 v_FragPos;

uniform mat4 u_ProjMatrix;
uniform mat4 u_ViewMatrix = mat4(1.0f);
uniform mat4 u_ModelMatrix = mat4(1.0f);

void main()
{
    vec4 viewCoord = u_ViewMatrix * u_ModelMatrix * vec4(u_VPos, 1.0f);
    
    v_Tcs = u_Tcs;
    v_VPos = viewCoord.xyz;
    v_Normal = mat3(transpose(inverse(u_ModelMatrix))) * u_Normal;
    v_FragPos = vec3(u_ModelMatrix * vec4(u_VPos, 1.0f));
    
    gl_Position = u_ProjMatrix * viewCoord;
}

