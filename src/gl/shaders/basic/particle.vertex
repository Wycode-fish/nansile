#version 330 core

layout (location=0) in vec3 VertexPos;
layout (location=1) in vec2 TexCoords;
layout (location=2) in vec3 Offset;
layout (location=3) in vec4 Color;

uniform mat4 u_ProjMatrix = mat4(1.0f);
uniform mat4 u_ModelMatrix = mat4(1.0f);
uniform mat4 u_ViewMatrix = mat4(1.0f);
uniform float u_WinHWRatio = 9.0f / 16.0f;
uniform vec3 u_ParticleGeneratorPos;

out vec2 v_TexCoords;
out vec4 v_Color;

void main()
{
    vec3 particlePos = (u_ModelMatrix * vec4(u_ParticleGeneratorPos, 1.0f)).xyz + Offset;
    gl_Position = u_ProjMatrix * u_ViewMatrix * vec4(particlePos, 1.0f) + vec4(VertexPos.x * u_WinHWRatio, VertexPos.yz, 0.0f);
    v_TexCoords = TexCoords;
    v_Color = Color;
}
